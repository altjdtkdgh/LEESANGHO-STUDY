package coding_test.스택과큐;

import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Queue;
import java.util.List;

public class 기능개발 {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		int[] progresses = {93, 30, 55};
		int[] speeds = {1, 30, 5};
		System.out.println(solution(progresses, speeds));
	}
	
    public static int[] solution(int[] progresses, int[] speeds) {
    	Queue<Integer> queue = new LinkedList<Integer>();
    	List<Integer> list = new ArrayList<Integer>();
    	
    	for (int i = 0; i < progresses.length; i++) {
    		int num = (100 - progresses[i]) % speeds[i] == 0?(100 - progresses[i]) / speeds[i] : (100 - progresses[i]) / speeds[i]+ 1 ;
    		queue.add(num);
		}
    	
    	int start = queue.poll();
    	int number = 1;
    	while(!queue.isEmpty()) {

    		int two = queue.poll();
    		if (start >= two) {
				number++;
			}
    		else {
    			list.add(number);
    			number =1;
    			start = two;
    		}
    	}
    	list.add(number);
    	
        int[] answer = new int[list.size()];
        
        for (int i = 0; i < list.size(); i++) {
			answer[i] = list.get(i);
		}
        return answer;
    }

}

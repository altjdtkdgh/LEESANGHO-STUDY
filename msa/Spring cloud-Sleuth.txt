Sleuth 란?

MSA 구조에서 클라이언트의 호출이 내부적으로 여러개의 서비스를 거쳐서 일어나서 전체 트랜잭션에 대한 로그 트레이싱이 어렵다.
이를 쉽게 하기 위해 트랜잭션의 전 구간을 추적하기 위한 하나의 연관 ID가 필요하다.
Sleuth를 사용하면 이 연관 ID(traceID, spanID)를 자동으로 생성해 준다.

------------------------------------------------------------------------------------------------------------------------------------------------


Spring Cloud Sleuth 적용하기

Spring Cloud Sleuth는 각 서비스간의 트랜잭션을 연결해주는 상관관계ID를 자동으로 주입해준다. 형태는 다음과 같다.

==========================================
{application-id},{추적 id},{스팬 id},{집킨에 추적 데이터 전송 여부}
==========================================

1.어플리케이션 이름: 로그를 출력하는 어플리케이션 이름이다. 기본적으로 스프링 클라우드 슬루스는 어플리케이션의 spring.application.name을 추적에서 기록할 이름으로 사용한다

2.추적 id: 추적 id는 상관관계 id와 동급 용어이며, 전체 트랜잭션에서 고유한 숫자다.

3.스팬 id: 스팬 id는 전체 트랜잭션의 일부를 나타내는 고유 id다 트랜잭션에 속한 각 서비스에는 고유한 스팬id가 있는데 특히 트랜잭션을 시각화하는데 유용하다.

4.집킨에 추적 데이터 전송 여부: 대용량 서비스에서 생성된 추적 데이터의 양은 엄청나고 모두 가치가 있는 것은 아니다. 스프링 클라우드 슬루스를 사용하면 트랜잭션을 집킨에 보낼 시점과 방법을 결정할 수 있다. 스프링 클라우드 슬루스의 추적 블록 끝부분에 있는 true/false를 표시해 추적 정보의 집킨 전송 여부를 결정한다.


실제 설정은 어떠한 추가 설정 없이 단순히 spring-cloud-starter-sleuth 모듈만 추가해준다면 자동적으로 상관관계 ID를 설정해준다.

마이크로서비스에 
build.gradle 파일 추가
===========================================
compile 'org.springframework.cloud:spring-cloud-starter-sleuth'
===========================================

사실 모듈만 추가해줌으로써 더이상 할 일이 없지만 추적관련한 로그 설정도 해주어야 실제로 추적이 어떻게 이루어지고 있나를 콘솔창에서 확인할 수 있다 따라서 다음 설정도 추가해준다.

application.yml 파일 내용 추가
===================================================
#sleuth 로그 레벨 설정      
logging:
  level:
    org.springframework.web: DEBUG
    org.springframework.cloud.sleuth: DEBUG
 ===================================================


간단하게 테스트해보기
 -  콘솔에는 아래의 로그가 출력이 된다. ( [msa-service-board,d9e898f9aaf42adf,d9e898f9aaf42adf,true])
========================================
2020-09-14 16:14:46.449 DEBUG [msa-service-board,d9e898f9aaf42adf,d9e898f9aaf42adf,true] 17564 --- [nio-8083-exec-4] o.s.web.servlet.DispatcherServlet        : Completed 200 OK
========================================


해당 상관관계 ID에서 맨 마지막 값인 false값은 이 트랜잭션을 zipkin에 전송하지 않는다는 뜻이다. 이 비율은 1/10 값이 기본 설정이다. 즉 10번요청시 1번의 비율로 zipkin에 해당 트랜잭션 정보를 전송한다는 뜻인데 다음 설정으로 비율을 조절 할 수 있다.

=========================================
spring:
  sleuth:
    sampler:
      probability: 1.0
=========================================

나는 테스트이기때문에 모든 요청을 zipkin에 전송하도록 1.0 값을 셋팅했다.
